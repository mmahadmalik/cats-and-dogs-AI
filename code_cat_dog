from tensorflow.keras.preprocessing.image import ImageDataGenerator
train_datagen = ImageDataGenerator(rescale=1.0/255)
train_data = train_datagen.flow_from_directory(
    "./train",
    target_size=(150,150),
    batch_size=20,
    class_mode='binary'

)
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers import Flatten
from tensorflow.keras.optimizers import SGD, Adam

model = Sequential()
model.add(Flatten())
model.add(Dense(500, activation='relu'))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['acc'])
hist = model.fit(train_data, epochs=8)
hist
test_data = train_datagen.flow_from_directory(
    "./test",
    target_size=(150,150),
    batch_size=20,
    class_mode='binary'

)

model.predict(test_data)

np.where(model.predict(test_data)>0,"Dog","Cat")
